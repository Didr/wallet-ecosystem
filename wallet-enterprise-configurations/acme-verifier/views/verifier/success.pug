extends ../layout.pug

block layout-content
  // Container for the spinner (initially hidden)
  #spinner-container
    .spinner
      .spinner-circle

  #loading-text
    .container2
      .centered-layout
        h1 Loading

  // Container for the success content (initially hidden)
  #success-container(style="display: none;")
    .container2
      .centered-layout
        h1 Success

        // Container to hold inline boxes using Flexbox
        .inline-box-container(style="display: flex; gap:30px; flex-direction: row; flex-wrap: wrap;")
          // Iterate over each credential and display an inline box with dynamic background color and text color
          each credential, index in credentialPayloads
            - const branding = credential.credentialBranding || { backgroundColor: 'red', textColor: 'black' }
            .credential-box(style=`background-color: ${branding.backgroundColor}; color: ${branding.textColor}; width: 240px; height: 150px; border-radius: 10px; display: flex; flex-direction: column; justify-content: flex-start; align-items: flex-start; position: relative; padding: 10px;`)
              p(style="position: absolute; top: 10px; left: 10px; margin: 0; font-size: 13px;color:white;") #{credential.name}
              p(style="position: absolute; top: 25px; left: 10px; margin: 0; font-size: 10px;font-weight:300;color:white;") #{credential.description}
              img(style="position: absolute; bottom: 10px; left: 10px; height: 40px;")(src=credential.issuer.iconUrl)

        // Title for the textarea
        h3 Credential Details

        // Text area to display credentials JSON format
        textarea#json-textarea(style="border: 1px solid #ccc; padding: 10px; margin-bottom:20px; padding-top:0px; background-color: white; color: black; overflow: auto; resize: vertical; width:500px; min-height: 200px;")
          //- Display the 'credentialPayloads' JSON object
          | #{JSON.stringify(credentialPayloads, null, 2)}

  // JavaScript to show the spinner for 2 seconds and then hide it
  script.
    setTimeout(() => {
      const spinnerContainer = document.getElementById('spinner-container');
      const successContainer = document.getElementById('success-container');
      const loadingText = document.getElementById('loading-text');

      if (spinnerContainer && successContainer && loadingText) {
        spinnerContainer.style.display = 'none'; // Hide the spinner
        successContainer.style.display = 'block'; // Show the success content
        loadingText.style.display = 'none'; // Hide the loading text
      }
    }, 2000); // Hide the spinner after 2000 milliseconds (2 seconds)

  block footer
    include ../footer.pug

  link(rel="stylesheet" href="/styles/index.css")
  script(src="/js/index.js")
